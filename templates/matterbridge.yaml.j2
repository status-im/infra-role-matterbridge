---
Nick: "autobot"

general:
  RemoteNickFormat: "[{PROTOCOL}/{BRIDGE}] <{NICK}> "

########################################
# Definition of bridges to be used     #
########################################

{{ matterbridge_bridges | to_nice_yaml }}

#######################################
# These are auto generated by Ansible #
#######################################

gateway:
{% for gtw in matterbridge_gateways %}
  - name: "{{ gtw.status | default('bridge#'+(loop.index|string)) | mandatory }}"
    enable: "true"
    inout:
    {% if gtw.get("status", false) and not gtw.get("private", false) %}

      - account: "status.bridge"
        channel: "{{ gtw.status }}"
    {% endif %}
    {% if gtw.get("gitter", false) %}

      - account: "gitter.autobot"
        channel: "{{ gtw.gitter }}"
    {% endif %}
    {% if gtw.get("telegram", false) %}

      - account: "telegram.autobot"
        channel: "{{ gtw.telegram }}"
    {% endif %}
    {% for slack_srv in gtw.get("slack", []) %}

      - account: "slack.{{ slack_srv.srv }}"
        channel: "{{ slack_srv.ch }}"
    {% endfor %}
    {% for discord_srv in gtw.get("discord", []) %}

      - account: "discord.{{ discord_srv.srv }}"
        channel: "{{ discord_srv.ch }}"
        options:
          WebhookURL: "{{lookup("passwordstore", "cloud/Discord/webhooks/"+discord_srv.srv+"/"+discord_srv.ch)}}"
    {% endfor %}

{% endfor %}

{% if matterbridge_extra is defined %}
########################################
# special cases for bridging           #
########################################

  {{ matterbridge_extra | to_nice_yaml(indent=2) | trim | indent(2) }}
{% endif %}
